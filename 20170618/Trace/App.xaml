<Application x:Class="Trace.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Trace"
    StartupUri="Views/main/Animation.xaml">

    <Application.Resources>
        <ResourceDictionary>
            <!--全局文本框样式-->
            <Style TargetType="{x:Type TextBox}">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#cccccc"/>
                <Setter Property="Foreground" Value="#666666"/>
                <Setter Property="Background" Value="White"/>
                <Setter Property="MinHeight" Value="28" />
                <Setter Property="Width" Value="260" />
                <Setter Property="Padding" Value="5" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border BorderBrush="{TemplateBinding Control.BorderBrush}" BorderThickness="1" CornerRadius="2">
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"></ScrollViewer>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border Background="{TemplateBinding Background}">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="Transparent"/>
                        <Setter Property="Cursor" Value="Hand"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <!--标签样式-->
            <Style x:Key="WpfLable" TargetType="{x:Type Label}" >
                <Setter Property="Foreground" Value="#333333"></Setter>
                <Setter Property="Height" Value="28" />
            </Style>
            <!--END-->
            <!--确认按钮样式-->
            <LinearGradientBrush x:Key="LinearGradientBlueBackground" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#2D8932" Offset="0" />
                <GradientStop Color="#2D8932" Offset="1" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="MyBtnBorderColor" Color="#2D8132"></SolidColorBrush>
            <SolidColorBrush x:Key="MyBtnHoverBackgroundColor" Color="#2DAB33"></SolidColorBrush>
            <SolidColorBrush x:Key="MyBtnPressedBackgroundColor" Color="#2D8932"></SolidColorBrush>
            <Style x:Key="WpfButton" TargetType="{x:Type Button}" >
                <Setter Property="Background" Value="{StaticResource LinearGradientBlueBackground}"></Setter>
                <Setter Property="Foreground" Value="White"></Setter>
                <Setter Property="Height" Value="28" />
                <Setter Property="BorderBrush" Value="{StaticResource MyBtnBorderColor}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true" CornerRadius="3,3,3,3">
                                <ContentPresenter x:Name="contentPresenter" 
                                    Focusable="False" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    Margin="{TemplateBinding Padding}" 
                                    RecognizesAccessKey="True" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource MyBtnHoverBackgroundColor}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource MyBtnPressedBackgroundColor}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--END-->
            <!--取消按钮样式-->
            <LinearGradientBrush x:Key="LinearGradientBlueBackground2" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#F5F6F8" Offset="0" />
                <GradientStop Color="#F5F6F8" Offset="1" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="MyBtnBorderColor2" Color="#cccccc"></SolidColorBrush>
            <SolidColorBrush x:Key="MyBtnHoverBackgroundColor2" Color="#eeeeee"></SolidColorBrush>
            <Style x:Key="WpfButton2" TargetType="{x:Type Button}" >
                <Setter Property="Background" Value="{StaticResource LinearGradientBlueBackground2}"></Setter>
                <Setter Property="Foreground" Value="#666666"></Setter>
                <Setter Property="Height" Value="28" />
                <Setter Property="BorderBrush" Value="{StaticResource MyBtnBorderColor2}"></Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="true" CornerRadius="3,3,3,3">
                                <ContentPresenter x:Name="contentPresenter" 
                                    Focusable="False" 
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                    Margin="{TemplateBinding Padding}" 
                                    RecognizesAccessKey="True" 
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"  />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource MyBtnHoverBackgroundColor2}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--END-->
            
            <Style x:Key="ImageButtonStyle" TargetType="{x:Type Button}">
                <!--<Setter Property="FocusVisualStyle"
                Value="{StaticResource ButtonFocusVisual}"/>-->
                <Setter Property="Background"
                Value="{x:Null}"/>
                <Setter Property="BorderBrush"
                Value="{x:Null}"/>
                <Setter Property="BorderThickness"
                Value="1"/>
                <Setter Property="Foreground"
                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment"
                Value="Center"/>
                <Setter Property="VerticalContentAlignment"
                Value="Center"/>
                <Setter Property="Padding"
                Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <!--<local:ImageButtonChrome x:Name="Chrome"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        RenderDefaulted="{TemplateBinding Button.IsDefaulted}"
                                        RenderMouseOver="{TemplateBinding IsMouseOver}"
                                        RenderPressed="{TemplateBinding IsPressed}"
                                        SnapsToDevicePixels="true">
                                <ContentPresenter Margin="{TemplateBinding Padding}" Name="PART_ContentPresenter"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </local:ImageButtonChrome>-->
                            <ControlTemplate.Triggers>
                                <Trigger Property="ToggleButton.IsChecked"
                                 Value="true">
                                    <!--<Setter TargetName="Chrome"
                                    Property="RenderPressed"
                                    Value="true"/>-->
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="OpitionButton" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Path Data="M107.23697,9.0566072 L124.20754,26.02717 26.026463,124.20824 9.0559013,107.23768 z M0.5,0.5 L99.935998,0.5 0.5,99.935997 z" Fill="#FFF4F4F5" RenderTransformOrigin="0.402686176996286,0.402683907102993" Stretch="Fill" Stroke="Black">
                                    <Path.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform/>
                                            <SkewTransform/>
                                            <RotateTransform Angle="-135"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </Path.RenderTransform>
                                </Path>
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsFocused" Value="True"/>
                                <Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsMouseOver" Value="True"/>
                                <Trigger Property="IsPressed" Value="True"/>
                                <Trigger Property="IsEnabled" Value="False"/>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style TargetType="DataGrid">
                <!--网格线颜色-->
                <Setter Property="CanUserResizeColumns" Value="false"/>
                <Setter Property="Background" Value="#FAFAFA" />
                <Setter Property="BorderBrush" Value="#E3E3E3" />
                <Setter Property="BorderThickness" Value="0,1,0,1" />
            </Style>
            <Style TargetType="DataGridColumnHeader">
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="MinWidth" Value="0" />
                <Setter Property="MinHeight" Value="30" />
                <Setter Property="Foreground" Value="#333333" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridColumnHeader">
                            <Border x:Name="BackgroundBorder" BorderThickness="0" BorderBrush="#E3E3E3" Width="Auto">
                                <Grid >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter  Margin="0,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" Grid.Column="2" Width="8" Height="6" Fill="White" Margin="0,0,50,0" 
                                    VerticalAlignment="Center" RenderTransformOrigin="1,1" />
                                    <Rectangle Width="0" Fill="#E3E3E3" HorizontalAlignment="Right" Grid.ColumnSpan="1" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Height" Value="30"/>
            </Style>
            <!--行样式触发 背景色改变必须先设置cellStyle 因为cellStyle会覆盖rowStyle样式-->
            <Style TargetType="DataGridRow">
                <Setter Property="Background" Value="#FAFAFA" />
                <Setter Property="Height" Value="30"/>
                <Setter Property="Foreground" Value="#666666" />
                <Setter Property="BorderBrush" Value="#E3E3E3" />
                <Setter Property="BorderThickness" Value="0,1,0,0" />
                <Style.Triggers>
                    <!--隔行换色-->
                    <Trigger Property="ItemsControl.AlternationIndex" Value="0" >
                        <Setter Property="Background" Value="White" />
                    </Trigger>
                    <Trigger Property="ItemsControl.AlternationIndex" Value="1" >
                        <Setter Property="Background" Value="#FAFAFA" />
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="White"/>
                        <!--<Setter Property="Foreground" Value="White"/>-->
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Foreground" Value="Black"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <!--单元格样式触发-->
            <Style TargetType="DataGridCell">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="DataGridCell">
                            <TextBlock TextAlignment="Center" VerticalAlignment="Center"  >
                            <ContentPresenter />
                            </TextBlock>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <!--<Setter Property="Background" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>-->
                        <Setter Property="Foreground" Value="Black"/>
                    </Trigger>
                </Style.Triggers>
            </Style>
            <ResourceDictionary.MergedDictionaries>
                <!--<ResourceDictionary Source="/Trace;component/Res_/Themes/Generic.xaml" />-->
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Application.Resources>

    <!-- -->
    <!--<Application.Resources>-->

    <!--<ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Res_/Themes/Generic.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>-->

    <!--</Application.Resources>-->

</Application>
